{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthpk/Documents/GitHub/BHT-HACK/Website/src/components/register/Register.js\";\nimport React, { useState } from 'react';\nimport styles from './register.module.css';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { Button, FormControl, Input, InputLabel, FormHelperText } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst registerUser = userData => dispatch => {\n  axios.post(\"/routes/users/register\", userData);\n};\n\nconst Register = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [secondName, setSecondName] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [shown, setShown] = useState(false); //error\n\n  const [emailError, setEmailError] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [secondNameError, setSecondNameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [confirmError, setConfirmError] = useState(\"\");\n\n  const handleShow = () => {\n    if (!shown) {\n      setShown(true);\n    } else {\n      setShown(false);\n    }\n  };\n\n  const changeHandleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const changeHandleConfirm = e => {\n    setConfirm(e.target.value);\n  };\n\n  const changeHandlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const changeHandleFirstName = e => {\n    setFirstName(e.target.value);\n  };\n\n  const changeHandleSecondName = e => {\n    setSecondName(e.target.value);\n  };\n\n  const validate = () => {\n    let emailError = \"\";\n    let passwordError = \"\";\n    let firstNameError = \"\";\n    let secondNameError = \"\";\n    let confirmError = \"\";\n\n    if (!email.includes('@')) {\n      emailError = \"invalid email\";\n    }\n\n    if (!firstName || !secondName) {\n      firstNameError = secondNameError = \"Name cannot be blank\";\n    }\n\n    const condition = /^(?=.*\\d)(?=.*([a-z]|[A-Z]))([\\x20-\\x7E]){8,}$/;\n\n    if (!condition.test(password)) {\n      passwordError = \"Make your password strong\";\n    }\n\n    if (password !== confirm) {\n      confirmError = \"The password doesn't match\";\n    }\n\n    if (emailError || firstNameError || secondNameError || passwordError || confirmError) {\n      setEmailError(emailError);\n      setFirstNameError(firstNameError);\n      setSecondNameError(secondNameError);\n      setPasswordError(passwordError);\n      setConfirmError(confirmError);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      fname: firstName,\n      lname: secondName,\n      email: email,\n      password: password\n    };\n    registerUser(newUser);\n    const isValid = validate();\n\n    if (isValid) {\n      setFirstName(\"\");\n      setSecondName(\"\");\n      setEmail(\"\");\n      setConfirm(\"\");\n      setPassword(\"\");\n      setFirstNameError(\"\");\n      setSecondNameError(\"\");\n      setEmailError(\"\");\n      setPasswordError(\"\");\n      setConfirmError(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.registerContent1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Create Your Lorem ipsum account\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"to continue to lorem ipsum\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.registerform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: styles.signInForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.topInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    value: firstName,\n    onChange: changeHandleFirstName,\n    className: styles.child2,\n    type: \"text\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }), \" \", firstNameError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 39\n    }\n  }, firstNameError) : null), /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: changeHandleSecondName,\n    value: secondName,\n    type: \"text\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }), \" \", secondNameError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 43\n    }\n  }, secondNameError) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.midInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.emailAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Input, {\n    value: email,\n    onChange: changeHandleEmail,\n    className: styles.child2,\n    type: \"email\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }), emailError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 43\n    }\n  }, emailError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 43\n    }\n  }, \"Enter a Valid Email\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.bottomInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, shown ? /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 41\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    value: password,\n    onChange: changeHandlePassword,\n    className: styles.child2,\n    type: \"text\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 41\n    }\n  }), passwordError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 43\n    }\n  }, passwordError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 44\n    }\n  }, \"Use 8 or more characters with a mix\")) : /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 41\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    value: password,\n    onChange: changeHandlePassword,\n    className: styles.child2,\n    type: \"password\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 41\n    }\n  }), passwordError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 43\n    }\n  }, passwordError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 44\n    }\n  }, \"Use 8 or more characters with a mix\")), shown ? /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 41\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(Input, {\n    value: confirm,\n    onChange: changeHandleConfirm,\n    className: styles.child2,\n    type: \"text\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 41\n    }\n  }), confirmError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 43\n    }\n  }, confirmError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 45\n    }\n  }, \"of letters, numbers & symbols\")) : /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 41\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(Input, {\n    value: confirm,\n    onChange: changeHandleConfirm,\n    className: styles.child2,\n    type: \"password\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 41\n    }\n  }), confirmError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 43\n    }\n  }, confirmError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  }, \"of letters, numbers & symbols\")), /*#__PURE__*/React.createElement(Button, {\n    className: styles.hideShowBtn,\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, shown ? /*#__PURE__*/React.createElement(VisibilityOffIcon, {\n    className: styles.hideShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(VisibilityIcon, {\n    className: styles.hideShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 39\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, \"Log In Instead\"), /*#__PURE__*/React.createElement(Button, {\n    className: styles.formBtn,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, \"Register\")))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/siddharthpk/Documents/GitHub/BHT-HACK/Website/src/components/register/Register.js"],"names":["React","useState","styles","VisibilityIcon","VisibilityOffIcon","Button","FormControl","Input","InputLabel","FormHelperText","Link","axios","registerUser","userData","dispatch","post","Register","firstName","setFirstName","secondName","setSecondName","confirm","setConfirm","email","setEmail","password","setPassword","shown","setShown","emailError","setEmailError","firstNameError","setFirstNameError","secondNameError","setSecondNameError","passwordError","setPasswordError","confirmError","setConfirmError","handleShow","changeHandleEmail","e","target","value","changeHandleConfirm","changeHandlePassword","changeHandleFirstName","changeHandleSecondName","validate","includes","condition","test","handleSubmit","preventDefault","newUser","fname","lname","isValid","registerContent1","header","registerform","signInForm","topInput","child2","error","lastName","midInput","emailAddress","bottomInput","hideShowBtn","hideShow","buttonDiv","formBtn"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport styles from './register.module.css';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport {Button, FormControl, Input, InputLabel, FormHelperText} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\nconst registerUser = (userData) => dispatch => {\n    axios\n      .post(\"/routes/users/register\", userData)\n};\n\nconst Register = () => {\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [secondName, setSecondName] = useState(\"\");\n    const [confirm, setConfirm] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [shown, setShown] = useState(false);\n    //error\n    const [emailError, setEmailError] = useState(\"\");\n    const [firstNameError, setFirstNameError] = useState(\"\");\n    const [secondNameError, setSecondNameError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [confirmError, setConfirmError] = useState(\"\");\n\n    const handleShow = () => {\n        if (!shown) {\n            setShown(true);\n        } else {\n            setShown(false);\n        }\n\n    }\n    const changeHandleEmail = e => {\n        setEmail(e.target.value);\n    }\n    const changeHandleConfirm = e => {\n        setConfirm(e.target.value);\n    }\n    const changeHandlePassword = e => {\n        setPassword(e.target.value);\n    }\n    const changeHandleFirstName = e => {\n        setFirstName(e.target.value);\n    }\n    const changeHandleSecondName = e => {\n        setSecondName(e.target.value);\n    }\n\n    const validate = () => {\n        let emailError = \"\";\n        let passwordError = \"\";\n        let firstNameError = \"\";\n        let secondNameError = \"\";\n        let confirmError = \"\";\n\n        if (!(email.includes('@'))) {\n            emailError = \"invalid email\";\n        }\n\n        if (!firstName || !secondName) {\n            firstNameError = secondNameError = \"Name cannot be blank\";\n        }\n        const condition = /^(?=.*\\d)(?=.*([a-z]|[A-Z]))([\\x20-\\x7E]){8,}$/;\n        if (!(condition.test(password))) {\n            passwordError = \"Make your password strong\";\n        }\n        if (password !== confirm) {\n            confirmError = \"The password doesn't match\";\n        }\n\n        if (emailError || firstNameError || secondNameError || passwordError || confirmError) {\n            setEmailError(emailError);\n            setFirstNameError(firstNameError);\n            setSecondNameError(secondNameError);\n            setPasswordError(passwordError);\n            setConfirmError(confirmError);\n            return false\n        }\n\n        return true;\n\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const newUser = {\n            fname: firstName,\n            lname: secondName,\n            email: email,\n            password: password\n        };\n\n        registerUser(newUser);\n\n        const isValid = validate();\n        if (isValid) {\n            setFirstName(\"\");\n            setSecondName(\"\");\n            setEmail(\"\");\n            setConfirm(\"\");\n            setPassword(\"\");\n            setFirstNameError(\"\");\n            setSecondNameError(\"\");\n            setEmailError(\"\");\n            setPasswordError(\"\");\n            setConfirmError(\"\");\n        }\n    }\n    return (\n        <div className={styles.registerContent1}>\n            <div className={styles.header}>\n                <h3>Create Your Lorem ipsum account</h3>\n                <p>to continue to lorem ipsum</p>\n            </div>\n            <div className={styles.registerform}>\n\n                <form action=\"\" className={styles.signInForm}>\n\n                    <div className={styles.topInput}>\n                        <FormControl className={styles.firstName}>\n                            <InputLabel htmlFor=\"my-input\">First Name</InputLabel>\n                            <Input\n                                value={firstName}\n                                onChange={changeHandleFirstName}\n                                className={styles.child2}\n                                type=\"text\"\n                                id=\"my-input\"\n                                aria-describedby=\"my-helper-text\"/> {\n                                firstNameError\n                                    ? <FormHelperText className={styles.error} id=\"my-helper-text\">{firstNameError}</FormHelperText>\n                                    : null\n                            }\n\n                        </FormControl>\n\n                        <FormControl className={styles.lastName}>\n                            <InputLabel htmlFor=\"my-input\">Last Name</InputLabel>\n                            <Input\n                                onChange={changeHandleSecondName}\n                                value={secondName}\n                                type=\"text\"\n                                id=\"my-input\"\n                                aria-describedby=\"my-helper-text\"/> {\n                                    secondNameError\n                                        ? <FormHelperText className={styles.error} id=\"my-helper-text\">{secondNameError}</FormHelperText>\n                                        : null\n                                }\n                        </FormControl>\n\n                    </div>\n\n                    <div className={styles.midInput}>\n                        <FormControl className={styles.emailAddress}>\n                            <InputLabel htmlFor=\"my-input\">Email Address</InputLabel>\n                            <Input\n                                value={email}\n                                onChange={changeHandleEmail}\n                                className={styles.child2}\n                                type=\"email\"\n                                id=\"my-input\"\n                                aria-describedby=\"my-helper-text\"/>\n                           {\n                                    emailError\n                                        ? <FormHelperText className={styles.error} id=\"my-helper-text\">{emailError}</FormHelperText>\n                                        : <FormHelperText id=\"my-helper-text\">Enter a Valid Email</FormHelperText>\n                                }\n                        </FormControl>\n                    </div>\n                    <div className={styles.bottomInput}>\n                        {\n                            shown\n                                ? <FormControl className={styles.password}>\n                                        <InputLabel htmlFor=\"my-input\">Password</InputLabel>\n                                        <Input\n                                            value={password}\n                                            onChange={changeHandlePassword}\n                                            className={styles.child2}\n                                            type=\"text\"\n                                            id=\"my-input\"\n                                            aria-describedby=\"my-helper-text\"/>\n                                            {\n                                    passwordError\n                                        ? <FormHelperText className={styles.error} id=\"my-helper-text\">{passwordError}</FormHelperText>\n                                        :  <FormHelperText id=\"my-helper-text\">Use 8 or more characters with a mix\n                                        </FormHelperText>\n                                }\n                                       \n                                    </FormControl>\n                                : <FormControl className={styles.password}>\n                                        <InputLabel htmlFor=\"my-input\">Password</InputLabel>\n                                        <Input\n                                            value={password}\n                                            onChange={changeHandlePassword}\n                                            className={styles.child2}\n                                            type=\"password\"\n                                            id=\"my-input\"\n                                            aria-describedby=\"my-helper-text\"/>\n                                       {\n                                    passwordError\n                                        ? <FormHelperText className={styles.error} id=\"my-helper-text\">{passwordError}</FormHelperText>\n                                        :  <FormHelperText id=\"my-helper-text\">Use 8 or more characters with a mix\n                                        </FormHelperText>\n                                }\n                                    </FormControl>\n                        }\n\n                        {\n                            shown\n                                ? <FormControl className={styles.confirm}>\n                                        <InputLabel htmlFor=\"my-input\">Confirm</InputLabel>\n                                        <Input\n                                            value={confirm}\n                                            onChange={changeHandleConfirm}\n                                            className={styles.child2}\n                                            type=\"text\"\n                                            id=\"my-input\"\n                                            aria-describedby=\"my-helper-text\"/>\n                                            {\n                                    confirmError\n                                        ? <FormHelperText className={styles.error} id=\"my-helper-text\">{confirmError}</FormHelperText>\n                                        :   <FormHelperText id=\"my-helper-text\">of letters, numbers & symbols</FormHelperText>\n                                }\n                                       \n                                    </FormControl>\n                                : <FormControl className={styles.confirm}>\n                                        <InputLabel htmlFor=\"my-input\">Confirm</InputLabel>\n                                        <Input\n                                            value={confirm}\n                                            onChange={changeHandleConfirm}\n                                            className={styles.child2}\n                                            type=\"password\"\n                                            id=\"my-input\"\n                                            aria-describedby=\"my-helper-text\"/>\n                                       {\n                                    confirmError\n                                        ? <FormHelperText className={styles.error} id=\"my-helper-text\">{confirmError}</FormHelperText>\n                                        :   <FormHelperText id=\"my-helper-text\">of letters, numbers & symbols</FormHelperText>\n                                }\n                                    </FormControl>\n                        }\n                        <Button className={styles.hideShowBtn} onClick={handleShow}>\n                            {\n                                shown\n                                    ? <VisibilityOffIcon className={styles.hideShow}/>\n                                    : <VisibilityIcon className={styles.hideShow}/>\n                            }\n                        </Button>\n\n                    </div>\n                    <div className={styles.buttonDiv}>\n                        <Link to=\"/login\">Log In Instead</Link>\n                        <Button className={styles.formBtn} onClick={handleSubmit}>\n                            Register\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}