{"ast":null,"code":"var _jsxFileName = \"/Users/jigmetashi/Desktop/Website/src/components/register/Register.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./register.module.css\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { Button, FormControl, Input, InputLabel, FormHelperText } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nconst Register = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [secondName, setSecondName] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [shown, setShown] = useState(false); //error\n\n  const [emailError, setEmailError] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [secondNameError, setSecondNameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [confirmError, setConfirmError] = useState(\"\");\n\n  const handleShow = () => {\n    if (!shown) {\n      setShown(true);\n    } else {\n      setShown(false);\n    }\n  };\n\n  const changeHandleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const changeHandleConfirm = e => {\n    setConfirm(e.target.value);\n  };\n\n  const changeHandlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const changeHandleFirstName = e => {\n    setFirstName(e.target.value);\n  };\n\n  const changeHandleSecondName = e => {\n    setSecondName(e.target.value);\n  };\n\n  const validate = () => {\n    let emailError = \"\";\n    let passwordError = \"\";\n    let firstNameError = \"\";\n    let secondNameError = \"\";\n    let confirmError = \"\";\n\n    if (!email.includes(\"@\")) {\n      emailError = \"invalid email\";\n    }\n\n    if (!firstName || !secondName) {\n      firstNameError = secondNameError = \"Name cannot be blank\";\n    }\n\n    const condition = /^(?=.*\\d)(?=.*([a-z]|[A-Z]))([\\x20-\\x7E]){8,}$/;\n\n    if (!condition.test(password)) {\n      passwordError = \"Make your password strong\";\n    }\n\n    if (password !== confirm) {\n      confirmError = \"The password doesn't match\";\n    }\n\n    if (emailError || firstNameError || secondNameError || passwordError || confirmError) {\n      setEmailError(emailError);\n      setFirstNameError(firstNameError);\n      setSecondNameError(secondNameError);\n      setPasswordError(passwordError);\n      setConfirmError(confirmError);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n\n    if (isValid) {\n      setFirstName(\"\");\n      setSecondName(\"\");\n      setEmail(\"\");\n      setConfirm(\"\");\n      setPassword(\"\");\n      setFirstNameError(\"\");\n      setSecondNameError(\"\");\n      setEmailError(\"\");\n      setPasswordError(\"\");\n      setConfirmError(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.offset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.registerContent1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Create Your Lorem ipsum account\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"to continue to lorem ipsum\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.registerform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: styles.signInForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.topInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    value: firstName,\n    onChange: changeHandleFirstName,\n    className: styles.child2,\n    type: \"text\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), \" \", firstNameError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, firstNameError) : null), /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: changeHandleSecondName,\n    value: secondName,\n    type: \"text\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), \" \", secondNameError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, secondNameError) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.midInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.emailAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Input, {\n    value: email,\n    onChange: changeHandleEmail,\n    className: styles.child2,\n    type: \"email\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }), emailError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, emailError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, \"Enter a Valid Email\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.bottomInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, shown ? /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    value: password,\n    onChange: changeHandlePassword,\n    className: styles.child2,\n    type: \"text\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }), passwordError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, passwordError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, \"Use 8 or more characters with a mix\")) : /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    value: password,\n    onChange: changeHandlePassword,\n    className: styles.child2,\n    type: \"password\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }), passwordError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, passwordError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, \"Use 8 or more characters with a mix\")), shown ? /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(Input, {\n    value: confirm,\n    onChange: changeHandleConfirm,\n    className: styles.child2,\n    type: \"text\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }), confirmError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, confirmError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, \"of letters, numbers & symbols\")) : /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(Input, {\n    value: confirm,\n    onChange: changeHandleConfirm,\n    className: styles.child2,\n    type: \"password\",\n    id: \"my-input\",\n    \"aria-describedby\": \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }), confirmError ? /*#__PURE__*/React.createElement(FormHelperText, {\n    className: styles.error,\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, confirmError) : /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"my-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, \"of letters, numbers & symbols\")), /*#__PURE__*/React.createElement(Button, {\n    className: styles.hideShowBtn,\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, shown ? /*#__PURE__*/React.createElement(VisibilityOffIcon, {\n    className: styles.hideShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(VisibilityIcon, {\n    className: styles.hideShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, \"Log In Instead\"), /*#__PURE__*/React.createElement(Button, {\n    className: styles.formBtn,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, \"Register\"))))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/jigmetashi/Desktop/Website/src/components/register/Register.js"],"names":["React","useState","styles","VisibilityIcon","VisibilityOffIcon","Button","FormControl","Input","InputLabel","FormHelperText","Link","Register","firstName","setFirstName","secondName","setSecondName","confirm","setConfirm","email","setEmail","password","setPassword","shown","setShown","emailError","setEmailError","firstNameError","setFirstNameError","secondNameError","setSecondNameError","passwordError","setPasswordError","confirmError","setConfirmError","handleShow","changeHandleEmail","e","target","value","changeHandleConfirm","changeHandlePassword","changeHandleFirstName","changeHandleSecondName","validate","includes","condition","test","handleSubmit","preventDefault","isValid","offset","registerContent1","header","registerform","signInForm","topInput","child2","error","lastName","midInput","emailAddress","bottomInput","hideShowBtn","hideShow","buttonDiv","formBtn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./register.module.css\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport {\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nconst Register = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [secondName, setSecondName] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [shown, setShown] = useState(false);\n  //error\n  const [emailError, setEmailError] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [secondNameError, setSecondNameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [confirmError, setConfirmError] = useState(\"\");\n\n  const handleShow = () => {\n    if (!shown) {\n      setShown(true);\n    } else {\n      setShown(false);\n    }\n  };\n  const changeHandleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n  const changeHandleConfirm = (e) => {\n    setConfirm(e.target.value);\n  };\n  const changeHandlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n  const changeHandleFirstName = (e) => {\n    setFirstName(e.target.value);\n  };\n  const changeHandleSecondName = (e) => {\n    setSecondName(e.target.value);\n  };\n\n  const validate = () => {\n    let emailError = \"\";\n    let passwordError = \"\";\n    let firstNameError = \"\";\n    let secondNameError = \"\";\n    let confirmError = \"\";\n\n    if (!email.includes(\"@\")) {\n      emailError = \"invalid email\";\n    }\n\n    if (!firstName || !secondName) {\n      firstNameError = secondNameError = \"Name cannot be blank\";\n    }\n    const condition = /^(?=.*\\d)(?=.*([a-z]|[A-Z]))([\\x20-\\x7E]){8,}$/;\n    if (!condition.test(password)) {\n      passwordError = \"Make your password strong\";\n    }\n    if (password !== confirm) {\n      confirmError = \"The password doesn't match\";\n    }\n\n    if (\n      emailError ||\n      firstNameError ||\n      secondNameError ||\n      passwordError ||\n      confirmError\n    ) {\n      setEmailError(emailError);\n      setFirstNameError(firstNameError);\n      setSecondNameError(secondNameError);\n      setPasswordError(passwordError);\n      setConfirmError(confirmError);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (isValid) {\n      setFirstName(\"\");\n      setSecondName(\"\");\n      setEmail(\"\");\n      setConfirm(\"\");\n      setPassword(\"\");\n      setFirstNameError(\"\");\n      setSecondNameError(\"\");\n      setEmailError(\"\");\n      setPasswordError(\"\");\n      setConfirmError(\"\");\n    }\n  };\n  return (\n    <div className={styles.offset}>\n      <div className={styles.registerContent1}>\n        <div className={styles.header}>\n          <h3>Create Your Lorem ipsum account</h3>\n          <p>to continue to lorem ipsum</p>\n        </div>\n        <div className={styles.registerform}>\n          <form action=\"\" className={styles.signInForm}>\n            <div className={styles.topInput}>\n              <FormControl className={styles.firstName}>\n                <InputLabel htmlFor=\"my-input\">First Name</InputLabel>\n                <Input\n                  value={firstName}\n                  onChange={changeHandleFirstName}\n                  className={styles.child2}\n                  type=\"text\"\n                  id=\"my-input\"\n                  aria-describedby=\"my-helper-text\"\n                />{\" \"}\n                {firstNameError ? (\n                  <FormHelperText className={styles.error} id=\"my-helper-text\">\n                    {firstNameError}\n                  </FormHelperText>\n                ) : null}\n              </FormControl>\n\n              <FormControl className={styles.lastName}>\n                <InputLabel htmlFor=\"my-input\">Last Name</InputLabel>\n                <Input\n                  onChange={changeHandleSecondName}\n                  value={secondName}\n                  type=\"text\"\n                  id=\"my-input\"\n                  aria-describedby=\"my-helper-text\"\n                />{\" \"}\n                {secondNameError ? (\n                  <FormHelperText className={styles.error} id=\"my-helper-text\">\n                    {secondNameError}\n                  </FormHelperText>\n                ) : null}\n              </FormControl>\n            </div>\n\n            <div className={styles.midInput}>\n              <FormControl className={styles.emailAddress}>\n                <InputLabel htmlFor=\"my-input\">Email Address</InputLabel>\n                <Input\n                  value={email}\n                  onChange={changeHandleEmail}\n                  className={styles.child2}\n                  type=\"email\"\n                  id=\"my-input\"\n                  aria-describedby=\"my-helper-text\"\n                />\n                {emailError ? (\n                  <FormHelperText className={styles.error} id=\"my-helper-text\">\n                    {emailError}\n                  </FormHelperText>\n                ) : (\n                  <FormHelperText id=\"my-helper-text\">\n                    Enter a Valid Email\n                  </FormHelperText>\n                )}\n              </FormControl>\n            </div>\n            <div className={styles.bottomInput}>\n              {shown ? (\n                <FormControl className={styles.password}>\n                  <InputLabel htmlFor=\"my-input\">Password</InputLabel>\n                  <Input\n                    value={password}\n                    onChange={changeHandlePassword}\n                    className={styles.child2}\n                    type=\"text\"\n                    id=\"my-input\"\n                    aria-describedby=\"my-helper-text\"\n                  />\n                  {passwordError ? (\n                    <FormHelperText\n                      className={styles.error}\n                      id=\"my-helper-text\"\n                    >\n                      {passwordError}\n                    </FormHelperText>\n                  ) : (\n                    <FormHelperText id=\"my-helper-text\">\n                      Use 8 or more characters with a mix\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              ) : (\n                <FormControl className={styles.password}>\n                  <InputLabel htmlFor=\"my-input\">Password</InputLabel>\n                  <Input\n                    value={password}\n                    onChange={changeHandlePassword}\n                    className={styles.child2}\n                    type=\"password\"\n                    id=\"my-input\"\n                    aria-describedby=\"my-helper-text\"\n                  />\n                  {passwordError ? (\n                    <FormHelperText\n                      className={styles.error}\n                      id=\"my-helper-text\"\n                    >\n                      {passwordError}\n                    </FormHelperText>\n                  ) : (\n                    <FormHelperText id=\"my-helper-text\">\n                      Use 8 or more characters with a mix\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              )}\n\n              {shown ? (\n                <FormControl className={styles.confirm}>\n                  <InputLabel htmlFor=\"my-input\">Confirm</InputLabel>\n                  <Input\n                    value={confirm}\n                    onChange={changeHandleConfirm}\n                    className={styles.child2}\n                    type=\"text\"\n                    id=\"my-input\"\n                    aria-describedby=\"my-helper-text\"\n                  />\n                  {confirmError ? (\n                    <FormHelperText\n                      className={styles.error}\n                      id=\"my-helper-text\"\n                    >\n                      {confirmError}\n                    </FormHelperText>\n                  ) : (\n                    <FormHelperText id=\"my-helper-text\">\n                      of letters, numbers & symbols\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              ) : (\n                <FormControl className={styles.confirm}>\n                  <InputLabel htmlFor=\"my-input\">Confirm</InputLabel>\n                  <Input\n                    value={confirm}\n                    onChange={changeHandleConfirm}\n                    className={styles.child2}\n                    type=\"password\"\n                    id=\"my-input\"\n                    aria-describedby=\"my-helper-text\"\n                  />\n                  {confirmError ? (\n                    <FormHelperText\n                      className={styles.error}\n                      id=\"my-helper-text\"\n                    >\n                      {confirmError}\n                    </FormHelperText>\n                  ) : (\n                    <FormHelperText id=\"my-helper-text\">\n                      of letters, numbers & symbols\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              )}\n              <Button className={styles.hideShowBtn} onClick={handleShow}>\n                {shown ? (\n                  <VisibilityOffIcon className={styles.hideShow} />\n                ) : (\n                  <VisibilityIcon className={styles.hideShow} />\n                )}\n              </Button>\n            </div>\n            <div className={styles.buttonDiv}>\n              <Link to=\"/login\">Log In Instead</Link>\n              <Button className={styles.formBtn} onClick={handleSubmit}>\n                Register\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}